one_wire:
  - platform: gpio
    pin: GPIO23
    id: one_wire_1
  - platform: gpio
    pin: GPIO5
    id: one_wire_2

sensor:
  - platform: dallas_temp
    name: "Temperature 1"
    id: external_temperature_1
    update_interval: 60s
    one_wire_id: one_wire_1
    address: ${external_temp_address}
    on_value:
      then:
      - if:
          condition: 
            - sensor.in_range:
                id: external_temperature_1
                above: 0.5
            - switch.is_on: enable_temperature_compensation
          then:
            - button.press: write_temp_comp
  - platform: dallas_temp
    name: "Temperature internal"
    id: internal_temperature
    update_interval: 60s
    one_wire_id: one_wire_2
    address: ${internal_temp_address}

button:
  - platform: template
    id: write_temp_comp
    internal: true
    on_press:
      then:
        - if:
            condition: 
              - sensor.in_range:
                  id: external_temperature_1
                  above: 0.5
              - switch.is_on: enable_temperature_compensation
            then:
              - lambda: |-
                  if (!id(hide_ph_module)) {
                    byte error;
                    Wire.beginTransmission(${ph_address});
                    error = Wire.endTransmission();
                    if (error == 0) {
                      id(ph_ezo).set_t(id(external_temperature_1).state);
                      ESP_LOGW("custom_ph_read", "Set pH temperature compensation.");
                    }
                    else {
                      ESP_LOGW("custom_ph_read", "No pH sensor detected at address: ${ph_address}!");
                    }
                  }
                  if (!id(hide_ec_module)) {
                    byte error;
                    Wire.beginTransmission(${ec_address});
                    error = Wire.endTransmission();
                    if (error == 0) {
                      id(ec_ezo).set_t(id(external_temperature_1).state);
                      ESP_LOGW("custom_conductivity_read", "Set EC temperature compensation.");
                    }
                    else {
                      ESP_LOGW("custom_conductivity_read", "No Conductivity sensor detected at address: ${ec_address}!");
                    }
                  }
                  if (!id(hide_do_module)) {
                    byte error;
                    Wire.beginTransmission(${do_address});
                    error = Wire.endTransmission();
                    if (error == 0) {
                      id(do_ezo).set_t(id(external_temperature_1).state);
                      ESP_LOGW("custom_do_read", "Set DO temperature compensation.");
                    }
                    else {
                      ESP_LOGW("custom_do_read", "No DO sensor detected at address: ${do_address}!");
                    }
                  }
  - platform: template
    id: reset_temp_comp
    internal: true
    on_press:
      - lambda: |-
          if (!id(hide_ph_module)) {
            byte error;
            Wire.beginTransmission(${ph_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(ph_ezo).set_t(25.0);
              ESP_LOGW("custom_ph_read", "Reset pH temperature compensation.");
            }
            else {
              ESP_LOGW("custom_ph_read", "No pH sensor detected at address: ${ph_address}!");
            }
          }
          if (!id(hide_ec_module)) {
            byte error;
            Wire.beginTransmission(${ec_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(ec_ezo).set_t(25.0);
              ESP_LOGW("custom_conductivity_read", "Reset EC temperature compensation.");
            }
            else {
              ESP_LOGW("custom_conductivity_read", "No Conductivity sensor detected at address: ${ec_address}!");
            }
          }
          if (!id(hide_do_module)) {
            byte error;
            Wire.beginTransmission(${do_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(do_ezo).set_t(25.0);
              ESP_LOGW("custom_dissolvedoxygen_read", "Reset DO temperature compensation.");
            }
            else {
              ESP_LOGW("custom_dissolvedoxygen_read", "No DO sensor detected at address: ${do_address}!");
            }
          }
