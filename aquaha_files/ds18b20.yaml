one_wire:
  - platform: gpio
    pin: GPIO23
    id: one_wire_1
  - platform: gpio
    pin: GPIO5
    id: one_wire_2

sensor:
  - platform: dallas_temp
    name: temp1
    id: temp1
    update_interval: "${update_ec}"
    one_wire_id: one_wire_1
    on_value:
      then:
      - if:
          condition: 
            - sensor.in_range:
                id: temp1
                above: 10.0
            - switch.is_on: enable_temperature_compensation
          then:
            - button.press: write_temp_comp
  - platform: dallas_temp
    name: temp2
    id: temp2
    update_interval: "${update_ec}"
    one_wire_id: one_wire_2

button:
  - platform: template
    id: write_temp_comp
    internal: true
    on_press:
      then:
        - lambda: |-
            byte error;
            Wire.beginTransmission(${ec_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(ec_ezo).set_t(id(temp1).state);
            }
            else {
              ESP_LOGW("custom_conductivity_read", "No Conductivity sensor detected at address: ${ec_address}!");
            }
        - logger.log:
            format: "Setting EC temp compensation to %.1f"
            args: ["id(temp1).state"]
        - lambda: |-
            byte error;
            Wire.beginTransmission(${ph_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(ph_ezo).set_t(id(temp1).state);
            }
            else {
              ESP_LOGW("custom_ph_read", "No pH sensor detected at address: ${ph_address}!");
            }
        - logger.log:
            format: "Setting pH temp compensation to %.1f"
            args: ["id(temp1).state"]
        - lambda: |-
            byte error;
            Wire.beginTransmission(${do_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(do_ezo).set_t(id(temp1).state);
            }
            else {
              ESP_LOGW("custom_do_read", "No DO sensor detected at address: ${do_address}!");
            }
        - logger.log:
            format: "Setting DO temp compensation to %.1f"
            args: ["id(temp1).state"]
  - platform: template
    id: reset_temp_comp
    internal: true
    on_press:
      then:
        - lambda: |-
            byte error;
            Wire.beginTransmission(${ec_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(ec_ezo).set_t(25.0);
            }
            else {
              ESP_LOGW("custom_conductivity_read", "No Conductivity sensor detected at address: ${ec_address}!");
            }
        - logger.log:
            format: "Setting EC temp compensation to %.1f"
            args: ["25.0"]
        - lambda: |-
            byte error;
            Wire.beginTransmission(${ph_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(ph_ezo).set_t(25.0);
            }
            else {
              ESP_LOGW("custom_conductivity_read", "No pH sensor detected at address: ${ph_address}!");
            }
        - logger.log:
            format: "Setting pH temp compensation to %.1f"
            args: ["25.0"]
        - lambda: |-
            byte error;
            Wire.beginTransmission(${do_address});
            error = Wire.endTransmission();
            if (error == 0) {
              id(do_ezo).set_t(25.0);
            }
            else {
              ESP_LOGW("custom_dissolvedoxygen_read", "No DO sensor detected at address: ${do_address}!");
            }
        - logger.log:
            format: "Setting DO temp compensation to %.1f"
            args: ["25.0"]